program A statement delcaration_stmt assing_stmt conditional_stmt io_stmt id type basic_type list_type assing_stmt conditional_stmt stmt_block if_stmt while_stmt io_stmt read_stmt write_stmt expression arithemtic_exp term factor logic_exp numeric_relation
[ ] \n + - * / = < <= == <> >= > ( ) { } int bool string char list test else read write C I and or
program = new_line statement A
A = new_line statement |
new_line = \n
statement = declaration_stmt | assing_stmt | conditional_stmt | io_stmt
declaration_stmt = type I
id = I | id [ arithmetic_exp ]
type = basic_type | list_type
basic_type = int | bool | string | char
list_type = list basic_type
assing_stmt = id = expression
conditional_stmt = if_statement | while_stmt
stmt_block = { program }
if_stmt = test logic_exp stmt_block B
B = else stmt_block B |
while_stmt = while logic_exp stmt_block
io_stmt = read_stmt | write_stmt
read_stmt = read id
write_stmt = write expression
expression = arithmetic_exp | logic_exp
arithmetic_exp = term | term sign term
sign = + | -
term = factor | factor sing2 factor
sing2 = * | /
factor = ( arithmetic_exp ) | id | C
logic_exp = ( logic_exp logic_operator logic_exp ) | C | numeric_relation
logic_operator = and | or | == | <>
numeric_relation = ( arithmetic_exp  arithmetic_operator arithmetic_exp )
arithmetic_exp = < | <= | == | <> | >= | >